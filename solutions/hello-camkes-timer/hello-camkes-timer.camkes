/*
 * Copyright 2015, NICTA
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(NICTA_BSD)
 */

/*
 * CAmkES device driver tutorial.
 */

import <std_connector.camkes>;

/* import the component definitions */
import "components/Client/Client.camkes";
import "components/Timer/Timer.camkes";

assembly {
    composition {
        /* TODO: component instances */
        /* hint 1: one hardware component, one driver component
         * hint 2: look at
         * https://github.com/seL4/camkes-tool/blob/2.1.0/docs/index.md#creating-an-application
         */

        component Timerbase timerbase;
        component Timer timer;


        component Client client;

        /* TODO: connections */
        /* hint 1: use seL4HardwareMMIO to connect device memory
         * hint 2: use seL4HardwareInterrupt to connect interrupt
         * hint 3: look at
         * https://github.com/seL4/camkes-tool/blob/2.1.0/docs/index.md#creating-an-application
         */

        connection seL4HardwareMMIO timer_mem(from timer.reg, to timerbase.reg);
        connection seL4HardwareInterrupt timer_irq(from timerbase.irq, to timer.irq);


        /* timer interface connection */
        connection seL4RPCCall hello_timer(from client.hello, to timer.hello);
    }
    configuration {
        /* TODO: hardware resources */
        /* hint 1: find out the device memory address and IRQ number from the hardware data sheet
         * hint 2: look at
         * https://github.com/seL4/camkes-tool/blob/2.1.0/docs/index.md#hardware-components
         */

        timerbase.reg_attributes = "0x53F98000:0x1000"; //device memory
        timerbase.irq_attributes    = 27;               //Timer interrupt


        /* assign an initial value to semaphore */
        timer.sem_value = 0;
    }
}
